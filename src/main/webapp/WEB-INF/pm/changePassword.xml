<?xml version="1.0" encoding="UTF-8"?>
<flow parent="common" 
      xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">
  
    <var name="changePasswordBean" class="net.unicon.cas.passwordmanager.flow.model.ChangePasswordBean" />

    <input name="forced" type="boolean" required="true"/>
    <input name="username" type="java.lang.String" required="false" />
    
    
<!--    <decision-state id="isForcedSet">
        <if test="forced and username != null" then="changePassword" else="changePassword" />
    </decision-state>-->

    <!-- Change password view prompting for old password. -->
		<!--	ActiveDirectory does not enforce its password rules if you don't provide the oldPassword with the password change request.
						It interprets a password set as an administrative function.
						Since this is the case, we needed to require the user to enter the old password even if it is a forced change. This also
						negates the need for a setPassword view altogether -->
    <view-state id="viewChangePassword" view="casPmChangePassword" model="changePasswordBean">
        <binder>
            <binding property="username"/>
            <binding property="oldPassword"/>
            <binding property="newPassword"/>
            <binding property="confirmNewPassword"/>
        </binder>
        <on-render>
            <!--<evaluate expression="lockoutService.allowAttempt(username)" />-->
          <set name="viewScope.recaptchaSiteKey" value="recaptchaValidationAction.getSiteKey()"/>
          <set name="viewScope.commandName" value="'changePasswordBean'" />
        </on-render>
        <transition on="submit" bind="true" validate="true" to="checkFlowscopeUsername" />
        <transition on="return" to="pmExit" validate="false" bind="false"/>
    </view-state>
    
    <decision-state id="checkFlowscopeUsername">
      <if test="flowScope.username != null" then="changePassword" else="validateCaptcha"/>
    </decision-state>
    
    <action-state id="validateCaptcha">
      <evaluate expression="recaptchaValidationAction" />
      <transition on="error" to="viewChangePassword" />
      <transition on="yes" to="changePassword" />
      <transition on="no" to="viewChangePassword" />
    </action-state>
    
    <action-state id="changePassword">
      <evaluate expression="processChangePasswordAction" />
      <transition on="success" to="passwordChanged" />
      <transition on="error" to="viewChangePassword" />
    </action-state>
    
    <view-state id="passwordChanged" view="casPmChangedPassword">
        <transition to="pmExit" />
    </view-state>
</flow>

